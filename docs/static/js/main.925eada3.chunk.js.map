{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","getGifs","category","a","URL","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","style","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.925eada3.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = e => {\n    setInputValue(e.target.value)\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputValue.trim().length > 1) {\n      setCategories(cats => [inputValue, ...cats]);\n      setInputValue('');\n    }\n  }\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Buscar gifs\"\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n}","export const getGifs = async (category) => {\n  const URL = `https://api.giphy.com/v1/gifs/search?api_key=IUZ88yfl5h9qRyNpTjGX4f5ZcSpspvOu&q=${category}&limit=5`;\n  const resp = await fetch(URL);\n  const {data} = await resp.json();\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    }\n  })\n\n  return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img\n        src={url}\n        alt={title}\n        />\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React/* , { useState, useEffect } */ from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n  const {data: images, loading} = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      {\n        loading &&\n          <div className=\"loading\">\n            <div className=\"loader\">\n              <span style={{'--i': 1}}></span>\n              <span style={{'--i': 2}}></span>\n              <span style={{'--i': 3}}></span>\n              <span style={{'--i': 4}}></span>\n              <span style={{'--i': 5}}></span>\n              <span style={{'--i': 6}}></span>\n              <span style={{'--i': 7}}></span>\n              <span style={{'--i': 8}}></span>\n              <span style={{'--i': 9}}></span>\n              <span style={{'--i': 10}}></span>\n              <span style={{'--i': 11}}></span>\n              <span style={{'--i': 12}}></span>\n              <span style={{'--i': 13}}></span>\n              <span style={{'--i': 14}}></span>\n              <span style={{'--i': 15}}></span>\n              <span style={{'--i': 16}}></span>\n              <span style={{'--i': 17}}></span>\n              <span style={{'--i': 18}}></span>\n              <span style={{'--i': 19}}></span>\n              <span style={{'--i': 20}}></span>\n            </div>\n          </div>\n      }\n      <div className=\"card-grid\">\n        {\n          images.map((img) => (\n            <GifGridItem\n              key={img.id}\n              {...img}\n            />))\n        }\n      </div>\n    </>\n  )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category)\n      .then(imgs => {\n        setTimeout(() => {\n          setState({\n            data: imgs,\n            loading: false,\n          });\n        }, 3000);\n      });\n  }, [category]);\n\n  return state;\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n  const [categories, setCategories] = useState([\n    'Dragon Ball',\n  ]);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories}/>\n      <hr/>\n      <button>AÃ±adir</button>\n      <ul>\n        {categories.map((cat) => (\n          <GifGrid\n            category={cat}\n            key={cat}\n          />\n        ))}\n      </ul>\n    </>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}